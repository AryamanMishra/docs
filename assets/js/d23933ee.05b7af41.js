"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[749],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,y=m["".concat(p,".").concat(d)]||m[d]||l[d]||i;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5940:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:5},a="Python",c={unversionedId:"client/python",id:"client/python",title:"Python",description:"This page has not yet been written! You're welcome to contribute using the Edit link at the bottom.",source:"@site/docs/client/python.md",sourceDirName:"client",slug:"/client/python",permalink:"/docs/client/python",draft:!1,editUrl:"https://github.com/OpenLineage/docs/tree/main/docs/client/python.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Java",permalink:"/docs/client/java"},next:{title:"Integrating With OpenLineage",permalink:"/docs/integrations/about"}},p={},s=[{value:"Example",id:"example",level:2}],u={toc:s};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"python"},"Python"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This page has not yet been written! You're welcome to contribute using the Edit link at the bottom.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'#!/usr/bin/env python3\n\nfrom openlineage.client.run import RunEvent, RunState, Run, Job, Dataset\nfrom openlineage.client.client import OpenLineageClient\nfrom datetime import datetime\nfrom uuid import uuid4\n\n# Initialize the OpenLineage client\nclient = OpenLineageClient.from_environment()\n\n# Specify the producer of this lineage metadata\nproducer = "https://github.com/OpenLineage/workshops"\n\n# Create some basic Dataset objects\nmonthly_summary = Dataset(namespace="postgres://workshop-db:None", name="workshop.public.monthly_summary")\ncommissions = Dataset(namespace="postgres://workshop-db:None", name="workshop.public.commissions")\ntaxes = Dataset(namespace="postgres://workshop-db:None", name="workshop.public.taxes")\n\n# Create a Job object\njob = Job(namespace="workshop", name="monthly_accounting")\n\n# Create a Run object with a unique ID\nrun = Run(str(uuid4()))\n\n# Emit a START run event\nclient.emit(\n    RunEvent(\n        RunState.START,\n        datetime.now().isoformat(),\n        run, job, producer\n    )\n)\n\n# Emit a COMPLETE run event\nclient.emit(\n    RunEvent(\n        RunState.COMPLETE,\n        datetime.now().isoformat(),\n        run, job, producer,\n        inputs=[monthly_summary],\n        outputs=[commissions, taxes],\n    )\n)\n')))}l.isMDXComponent=!0}}]);